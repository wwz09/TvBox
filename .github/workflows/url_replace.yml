name: URL自动替换

on:
  push:
    branches: [ main ]
    paths: [ 'XC.json' ]
  workflow_dispatch:  # 允许手动触发
  repository_dispatch:  # 允许通过API触发，适用于上游同步后
    types: [ sync_upstream ]

# 授予工作流写入内容的权限
permissions:
  contents: write

jobs:
  replace-url:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: true  # 保持凭据以便后续push操作
          fetch-depth: 0
      
      - name: 设置Git用户信息
        run: |
          git config --local user.name "wwz09"
          git config --local user.email "wwz5124@gmail.com"
      
      - name: 确保工作目录干净
        run: |
          # 清理任何可能的本地修改，确保在干净状态下操作
          git reset --hard HEAD
          git clean -fd
      
      - name: 执行URL替换
        run: |
          # 定义要替换的URL正则表达式模式和替换为的内容
          # 此正则表达式会匹配任何以raw.githubusercontent.com/yoursmile66/TVBox/refs/heads/main结尾的URL
          SEARCH_REGEX="https?://[^/]+/raw\.githubusercontent\.com/yoursmile66/TVBox/refs/heads/main"
          REPLACE_WITH="."
          
          # 备份原文件
          mkdir -p .backups
          cp XC.json .backups/XC.json.backup.$(date '+%Y%m%d%H%M%S')
          
          # 执行替换（使用-E选项启用扩展正则表达式）
          sed -i -E "s|$SEARCH_REGEX|$REPLACE_WITH|g" XC.json
          
          # 显示替换结果（使用-E选项启用扩展正则表达式）
          echo "替换前匹配数: $(grep -oE "$SEARCH_REGEX" .backups/XC.json.backup.* | wc -l)"
          echo "替换后匹配数: $(grep -oE "$SEARCH_REGEX" XC.json | wc -l)"
      
      - name: 提交更改
        run: |
          # 检查是否有更改需要提交
          if git diff --exit-code XC.json; then
            echo "没有检测到需要替换的URL，跳过提交。"
            exit 0
          fi
          
          git add XC.json
          git commit -m "自动替换URL [skip ci]"
          
          # 尝试推送，如果失败则拉取最新代码后再次尝试
          git push origin HEAD:main || (
            echo "推送失败，尝试拉取最新代码..."
            git pull --rebase origin main &&
            git push origin HEAD:main
          )
        # 处理不同触发事件的条件
        if: |
          (contains(github.event_name, 'push') && contains(github.event.head_commit.message, '[skip replace]') == false) ||
          github.event_name == 'workflow_dispatch' ||
          github.event_name == 'repository_dispatch'
